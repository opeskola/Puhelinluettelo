{"version":3,"sources":["services/persons.js","App.js","index.js"],"names":["baseUrl","services_persons","axios","get","then","response","data","person","post","id","delete","concat","put","Notification","_ref","notification","message","style","color","type","background","fontSize","borderStyle","borderRadius","padding","marginBottom","react_default","a","createElement","Filter","props","onChange","handleChange","value","Persons","persons","map","p","key","name","number","onClick","deletePerson","PersonForm","onSubmit","handleSubmit","handleNameChange","newName","handleNumberChange","newNumber","App","_useState","useState","_useState2","Object","slicedToArray","setPersons","_useState3","_useState4","setNewName","_useState5","_useState6","setNewNumber","_useState7","_useState8","filter","setFilter","_useState9","_useState10","setNotification","useEffect","personService","notify","arguments","length","undefined","setTimeout","personsToShow","toLowerCase","includes","App_Notification","App_Filter","event","target","App_PersonForm","preventDefault","existingPerson","find","window","confirm","objectSpread","replacedPerson","createdPerson","catch","error","console","log","App_Persons","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.e1b33f72.chunk.js","sourcesContent":["import axios from 'axios'\n\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n  const promise = axios.get(baseUrl)\n\n  return promise.then(response => response.data)\n}\n\nconst create = (person) => {\n  const promise = axios.post(baseUrl, person)\n\n  return promise.then(response => response.data)\n}\n\nconst remove = (id) => {\n  const promise = axios.delete(`${baseUrl}/${id}`)\n\n  return promise.then(response => response.data)\n}\n\nconst replace = (person) => {\n  const promise = axios.put(`${baseUrl}/${person.id}`, person)\n\n  return promise.then(response => response.data)\n}\n\nexport default {\n  getAll, create, remove, replace\n}\n\n/*\n\nimport axios from 'axios'\nconst baseUrl = 'http://localhost:3001/persons'\n\nconst getAll = () => {\n  return axios.get(baseUrl)\n}\n\nconst create = newObject => {\n  return axios.post(baseUrl, newObject)\n}\n\nconst update = (id, newObject) => {\n  return axios.put(`${baseUrl}/${id}`, newObject)\n}\n\nconst remove = (id) => {\n  return axios.delete(`${baseUrl}/${id}`)\n}\n\nexport default { \n  getAll: getAll, \n  create: create, \n  update: update,\n  remove: remove\n}\n\n*/","import React, { useState, useEffect } from 'react'\nimport personService from './services/persons'\n\nconst Notification = ({ notification }) => {\n  if (notification.message === null) {\n    return null\n  }\n\n  const style = {\n    color: notification.type === 'error' ? 'red' : 'green',\n    background: 'lightgrey',\n    fontSize: 20,\n    borderStyle: 'solid',\n    borderRadius: 5,\n    padding: 10,\n    marginBottom: 10,\n  }\n\n  return (\n    <div style={style}>\n      {notification.message}\n    </div>\n  )\n}\n\nconst Filter = (props) => {\n  return (\n    <div>\n      rajaa näytettäviä\n      <input onChange={props.handleChange} value={props.value} />\n    </div>\n  )\n}\n\nconst Persons = (props) => {\n  return (\n    props.persons.map(p =>\n      <div key={p.name}>\n        {p.name} {p.number} <button onClick={()=>props.deletePerson(p.id)}>poista</button>\n      </div>\n    )\n  )\n}\n\nconst PersonForm = (props) => {\n  return (\n    <form onSubmit={props.handleSubmit}>\n      <div>\n        nimi: <input onChange={props.handleNameChange} value={props.newName} />\n      </div>\n      <div>\n        numero: <input onChange={props.handleNumberChange} value={props.newNumber} />\n      </div>\n      <div>\n        <button type=\"submit\">lisää</button>\n      </div>\n    </form>\n  )\n}\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [filter, setFilter] = useState('')\n  const [notification, setNotification] = useState({\n    message: null\n  })\n\n  useEffect(() => {\n    personService.getAll()\n      .then(data => {\n        setPersons(data)\n      })\n  }, [])\n\n  const handleNameChange = (event) => setNewName(event.target.value)\n  const handleNumberChange = (event) => setNewNumber(event.target.value)\n  const handleFilterChange = (event) => setFilter(event.target.value)\n\n  const notify = (message, type='success') => {\n    setNotification({ message, type })\n    setTimeout(() => setNotification({ message: null }), 10000)\n  }\n \n  const handleSubmit = (event) => {\n    event.preventDefault()\n\n    const existingPerson = persons.find(p => p.name === newName)\n\n    if (existingPerson) {\n      const ok = window.confirm(`${newName} on jo luettelossa, korvataanko vanha numero uudella`)\n      \n\n      \n      if (ok) {\n        personService\n          .replace({\n            ...existingPerson,\n            number: newNumber\n          })\n          .then(replacedPerson => {\n            setPersons(persons.map(p => p.name === newName ? replacedPerson : p))\n            setNewName('')\n            setNewNumber('')\n            notify(`Henkilön ${newName} numero muutettu`)\n          })\n          /*\n          .catch(() => {\n            setPersons(persons.filter(p => p.name !== newName))\n            notify(`Henkilön ${newName} oli jo poistettu`, 'error')\n          })\n          */\n      }\n\n      return\n    } \n     \n  personService\n      .create({\n        name: newName,\n        number: newNumber\n      })\n      .then(createdPerson => {\n        setPersons(persons.concat(createdPerson))\n        setNewName('')\n        setNewNumber('')\n        notify(`Lisättiin ${createdPerson.name}`)\n      })\n      .catch(error => {\n        // pääset käsiksi palvelimen palauttamaan virheilmoitusolioon näin\n        console.log(error.response.data)\n        notify(error.response.data)\n      })\n  }\n\n  const deletePerson = (id) => {\n    const person = persons.find(p => p.id === id)\n    const ok = window.confirm(`Poistetaanko ${person.name}`)\n    if (ok) {\n      personService\n        .remove(id)\n        .then(() => {\n          setPersons(persons.filter(p => p.id !== id))\n        })\n      notify(`Poistettiin ${person.name}`)\n    }\n  }\n\n  const personsToShow = filter.length === 0\n    ? persons \n    : persons.filter(p => p.name.toLowerCase().includes(filter.toLowerCase()) )\n\n  return (\n    <div>\n      <h2>Puhelinluettelo</h2>\n\n      <Notification notification={notification} />\n\n      <Filter handleChange={handleFilterChange} value={filter} />\n\n      <h3>lisää uusi</h3>\n\n      <PersonForm \n        handleNameChange={handleNameChange}\n        handleNumberChange={handleNumberChange}\n        handleSubmit={handleSubmit}\n        newName={newName}\n        newNumber={newNumber}\n      />\n\n      <h3>Numerot</h3>\n\n      <Persons persons={personsToShow} deletePerson={deletePerson} />\n    </div>\n  )\n\n}\n\nexport default App\n\n\n/*\nimport React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport personService from './services/persons'\nimport Notification from './components/Notification'\n\n\nconst App = () => {\n  const [ persons, setPersons] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ newSearch, setNewSearch ] = useState('')\n  const [ successMessage, setSuccessMessage] = useState(null)\n\n\n  useEffect(() => {\n    personService\n      .getAll()\n        .then(response => {\n        setPersons(response.data)\n      })\n  }, [])\n\n\n  const addPerson = (event) => {\n    event.preventDefault()\n    const Person = {\n      name: newName,\n      number: newNumber\n    }\n    \n\n    for (var i = 0; i < persons.length; i++) {\n      if (persons[i].name === Person.name) {\n        setNewName('')\n        setNewNumber('')\n        alert(`${Person.name} on jo luettelossa`)\n        return \n      }\n    }\n\n    personService\n      .create(Person)\n      .then(response => {\n        setPersons(persons.concat(Person))\n        setNewName('')\n        setNewNumber('')\n\n        setSuccessMessage(\n          `Lisättiin ${Person.name}`\n        )\n        setTimeout(() => {\n          setSuccessMessage(null)\n        }, 5000)\n      })\n  }\n\n\n  const handleNameChange = (event) => {\n    console.log(event.target.value)\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    console.log(event.target.value)\n    setNewNumber(event.target.value)\n  }\n\n  const handleSearchChange = (event) => {\n    console.log(event.target.value)\n    setNewSearch(event.target.value)\n  }\n\n  const showPersons = () => {\n    return (\n      persons.map(person => \n        <div key={person.name}>{person.name} {person.number}</div>\n      )\n    )\n  }\n\n  return (\n    <div>\n      <h2>Puhelinluettelo</h2>\n      <Notification message={successMessage}/>\n      <div>\n        rajaa näytettäviä <input value={newSearch} onChange={handleSearchChange}/>\n      </div>\n      <h3>lisää uusi</h3>\n      <form onSubmit={addPerson}>\n        <div>\n          <div>\n            nimi: <input value={newName} onChange={handleNameChange}/>\n          </div>\n          <div>\n            numero: <input value={newNumber} onChange={handleNumberChange}/>\n          </div>\n        </div>\n        <div>\n          <button type=\"submit\">lisää</button>\n        </div>\n      </form>\n      <h3>Numerot</h3>\n     {showPersons()}\n      \n    </div>\n  )\n\n}\n\nexport default App\n\n*/","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)"],"sourceRoot":""}